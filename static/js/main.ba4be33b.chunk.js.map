{"version":3,"sources":["fBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","storageService","storage","authService","auth","dbService","firestore","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","useEffect","onSubmit","event","preventDefault","updateProfile","type","placeholder","onChange","value","target","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccout","setNewAccout","error","setError","onchange","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","fileUrl","toggleEditing","update","src","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","onSnapshot","snapshot","nweetsArray","docs","map","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4be33b.chunk.js","sourcesContent":["\r\n// Your web app's Firebase configuration\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const storageService = firebase.storage();\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({userObj,refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n       \r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\r\n       \r\n    } \r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    });\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n       \r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            });\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n\r\n        </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccout, setNewAccout] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n    \r\n    const onchange = (event) => {\r\n        const {target: {name,value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if(name ===\"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccout){\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n       \r\n        \r\n    };\r\n\r\n    const toggleAccount = () => {\r\n        setNewAccout((prev) => {return !prev});\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit}>\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onchange}/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onchange} />\r\n            <input type=\"submit\" value={newAccout ? \"Create Account\" : \"Log In\" }/>\r\n        </form>\r\n        {error}\r\n        <span onClick={toggleAccount}>{newAccout ? \"Log in\" : \"Create Account\"}</span>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    \r\n   \r\n    const onSocialClick = async(event) => {\r\n        const {target : {name},} = event;\r\n        let provider;\r\n        if(name ===\"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\r\n        } else if(name ===\"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <div>\r\n       <AuthForm />\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n            <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Auth;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure want to delete?\");\r\n        console.log(ok);\r\n        if(ok){\r\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n           await storageService.refFromURL(nweetObj.fileUrl).delete(); // storage 파일 삭제\r\n        }\r\n\r\n    };\r\n    const toggleEditing = () => setEditing(\r\n       (prev) => !prev\r\n    );\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text : newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div> \r\n           {\r\n               editing ? (\r\n                        <> {\r\n                            isOwner && \r\n                            <>\r\n                            <form onSubmit={onSubmit}>\r\n                        <input value={newNweet} required placeholder=\"Edit your nweet\" onChange={onChange}/>\r\n                        <input type=\"submit\" value=\"Update Nwwet\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing} >Cancel</button>\r\n                        </>\r\n                        }\r\n                        \r\n                        </>\r\n                   ) \r\n                \r\n                   :\r\n               (\r\n               <>\r\n               <h4>{nweetObj.text}</h4>\r\n               {nweetObj.fileUrl && <img src={nweetObj.fileUrl} width=\"50px\" height=\"50px\" />}\r\n               {isOwner && (\r\n                   <>\r\n                       <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                       <button onClick={toggleEditing}>Edit Nweet</button> \r\n                   </>\r\n               )}\r\n               </>\r\n               )\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst NweetFactory = ({userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        let fileUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            fileUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            fileUrl,\r\n        }\r\n       \r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n        const {target : {files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget : {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }; \r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearPhotoClick = () => setAttachment(null);\r\n\r\n    return  (\r\n        <form onSubmit={onSubmit}>\r\n        <input type=\"text\" onChange={onChange} placeholder=\"What's on your mind?\" value={nweet} maxLength={120} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearPhotoClick}>Clear</button>\r\n            </div> }\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n   \r\n   \r\n    useEffect( () => {\r\n     \r\n       dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n           const nweetsArray = snapshot.docs.map((doc) => ({\r\n               id:doc.id,\r\n               ...doc.data(),\r\n           }));\r\n           setNweets(nweetsArray);\r\n       });\r\n    }, []);\r\n\r\n   \r\n    return (\r\n    <div>\r\n        <NweetFactory userObj={userObj} />\r\n        <div >\r\n            {nweets.map( (nweet) => \r\n                (<Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId  === userObj.uid }/>)\r\n                )}\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n    \r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\">{userObj.displayName} My Profile</Link>\r\n        </li>\r\n    </ul>\r\n    </nav>;\r\nexport default Navigation;","import React from \"react\"\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? ( \r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route> \r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n               \r\n                </>\r\n                )\r\n                : \r\n                (\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                 \r\n                </>\r\n                )}\r\n\r\n            </Switch>\r\n        </Router>\r\n    );\r\n                \r\n}\r\n\r\nexport default AppRouter;","import React,{useEffect, useState} from 'react'\nimport AppRouter from 'components/Router';\nimport { authService } from 'fBase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObject] = useState(null);\n  useEffect( \n    () => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n    \n       // setUserObject(user);\n\n        setUserObject({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n       } else {\n         setUserObject(null);\n       }\n       setInit(true);\n\n    });\n  } , []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n   \n    //setUserObject(Object.assign({}, user)); // 빈 객체생성 한다음 그 빈 객체를 user객체로 바꿈.\n   \n    setUserObject({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  \n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n   \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}